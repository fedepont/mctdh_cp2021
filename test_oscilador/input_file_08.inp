##################COMENTARIOS#################################
## keywords
## name			-> directory name
## propagation	-> calculate the temporal evolution
## geninwf		-> generate de initial wave function
## ojo! solo debe estar activa propagation o geninwf (no ambas)
## time-not-fs	-> se desactivan las unidades en los tiempos (se usan unidades atómicas)
############################################################## 
RUN-SECTION
	name=test_oscilador_08
	propagation
	#geninwf
	#time-not-fs
	#energy-not-ev
  
#############################################################
##############Paralellization################################
#usepthreads = 2, #summf2,#no-funkphi
#ptiming # Check ptiming file to control overload, and include
            # no-* keywords accordingly to suppress inefficiently 
            # parallelized routines.
#############################################################
#############################################################

##################COMENTARIOS#################################
## tfinal	-> tiempo final
## tout		-> tiempo en el cual va guardando los datos
## tpsi		-> lapso de tiempo en el que se va guardando la función de onda
############################################################## 
	tfinal = 1 tout = 0.001 tpsi = 0.001
	steps
	gridpop # para showd1d
	pdensity # particle density file. Useful to compute quantities after run.
	veigen
	psi
	auto
	#energy-not-ev
end-run-section

OPERATOR-SECTION
	opname=operator_file_08
end-operator-section

##################COMENTARIOS#################################
## single particle function (SPF) basis section
## Nomenclatura -> GDL = cantidad-de-elementos
## ojo! cuando tenemos 2 GDL X1 y X2 deben ser iguales
## en este caso usamos Sine-DVR
############################################################## 
SBASIS-SECTION
	X1	=	1
	X2	=	1
end-sbasis-section

##################COMENTARIOS#################################
## primitive basis section
## aca decimos como se describen cada una de las SPFs
## Nomenclatura -> GDL sin N -L L short/long
## 	GDL -> grado de libertad o coordenada
## 	sin -> keyword que permite hacer una aproximación sine-DVR
## 	N -> cantidad de puntos a utilizar
## 	[-L,L] -> ancho de la caja Sine-DVR
## 	short/long nos dice si los pts extremos estan incluidos o no en la grilla
#############################################################
PBASIS-SECTION
	X1	sin	51	-10.0	10.0	short
	X2	sin	51	-10.0	10.0	short
end-pbasis-section

INTEGRATOR-SECTION
	CMF/var	=	0.001	,	1d-6 # Initial step size, accuracy.
	BS/spf	=	9	,	1d-7 # Order, accuracy, initial step.
	SIL/A	=	10	,	1d-6 # Order, accuracy.
end-integrator-section

##################COMENTARIOS#################################
## Init Wave Function Section (consultar página de MCTDH)
## Cap. 7 https://www.pci.uni-heidelberg.de/tc/usr/mctdh/guide85.pdf
## acá le decimos el estado inicial (con qué va a empezar la evolución)
## HO			-> keyword que permite constuir un estado particular del osilador armónico
## nomenclatura	-> x0,unit	p0,unit	omega,unit	masa,unit	pop=1
## 	x0			-> dónde está centrado el oscilador
## 	p0			-> momento inicial del oscilador
## 	omega		-> frecuencia del oscilador
## 	masa		-> masa del oscilador
## 	pop			-> indica a que estado del oscilador corresponde, comenzando desde 1
#############################################################
INIT_WF-SECTION
	build
		X1	HO		1.2		0	1.8	1	pop=1
		X2	HO		-1.5	0	1.8	1	pop=1
	end-build
end-init_wf-section

end-input
