##################COMENTARIOS#################################
## keywords
## name -> nos dice el nombre del directorio
## propagation -> calcula la evolución temporal
## geninwf -> genera la función de onda inicial
## ojo! solo debe estar activa propagation o geninwf (no ambas)
############################################################## 
RUN-SECTION
	name=test_oscilador_01
	propagation
	#geninwf
  
#############################################################
##############Paralellization################################
#usepthreads = 2, summf2,no-funkphi
#ptiming # Check ptiming file to control overload, and include
            # no-* keywords accordingly to suppress inefficiently 
            # parallelized routines.
#############################################################
#############################################################

##################COMENTARIOS#################################
## tfinal	-> tiempo final
## tout		-> tiempo en el cual va guardando los datos
## tpsi		-> lapso de tiempo en el que se va guardando la función de onda
############################################################## 
	tfinal = 3.0 tout = 0.1 tpsi = 0.1
	steps
	gridpop # para showd1d
	pdensity # particle density file. Useful to compute quantities after run.
	veigen
	psi
	auto
	#energy-not-ev
end-run-section

OPERATOR-SECTION
	opname=operator_file_01
end-operator-section

##################COMENTARIOS#################################
## single particle function (SPF) basis section
## Nomenclatura -> GDL = cantidad-de-elementos
## ojo! cuando tenemos 2 GDL X1 y X2 deben ser iguales
## en este caso usamos Sine-DVR
############################################################## 
SBASIS-SECTION
	X1	=	2
	X2	=	2
end-sbasis-section

##################COMENTARIOS#################################
## primitive basis section
## aca decimos como se describen cada una de las SPFs
## Nomenclatura -> GDL sin N -L L short/long
## GDL -> grado de libertad o coordenada
## sin -> keyword que permite hacer una aproximación sine-DVR
## N -> cantidad de puntos a utilizar
## [-L,L] -> ancho de la caja Sine-DVR
## short/long nos dice si los pts extremos estan incluidos o no en la grilla
#############################################################
PBASIS-SECTION
	X1	sin	501	-100.0	100.0	short
	X2	sin	501	-100.0	100.0	short
end-pbasis-section

INTEGRATOR-SECTION
	CMF/var	=	0.1	,	1d-6 # Initial step size, accuracy.
	BS/spf	=	9	,	1d-7 # Order, accuracy, initial step.
	SIL/A	=	10	,	1d-6 # Order, accuracy.
end-integrator-section

##################COMENTARIOS#################################
## Init Wave Function Section (consultar página de MCTDH)
## acá le decimos el estado inicial (con qué va a empezar la evolución)
## gauus -> keyword que permite constuir una función gaussiana
## nomenclatura -> GDL keyword x0 p0 deltaX
## x0 -> dónde está centrada la gaussiana
## p0 -> momento inicial de la gaussiana
## deltaX -> dispersión (ancho) de la gaussiana
##
## A-coeff -> especifica la forma que tendran los coeficientes (cómo poblar)
## 1 -> corresponde al estado fundamental
## 2 -> corresponde al primer estado excitado
## si no ponemos nada se asume que todo es cero salvo las primeras exitaciones
#############################################################
INIT_WF-SECTION
	build
		X1	gauss	-52.0	1.000	8.333
		X2	gauss	0.0		0.0		8.333
		#X2	gauss	10.0	0.0		0.5
		#X1	eigenf	1eNe	pop=1
		#X2	eigenf	osc1D	pop=1
	end-build
  
	#symorb=1,2
	#A-coeff
		#1	2	(1.0,0.0)
	#end-A-coeff
end-init_wf-section

end-input
